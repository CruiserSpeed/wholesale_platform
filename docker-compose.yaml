version: "3"
services:
  backend_admin_app:
    depends_on: 
      - backend_admin_db
      - backend_api_walker
    container_name: backend_admin_app
    build:
      context: backend
      dockerfile: admin_app/Dockerfile
    environment:
      DB_USER: ${ADMIN_DB_USER}
      DB_HOST: backend_admin_db
      DB_PORT: ${ADMIN_DB_PORT}
      DB_PASSWORD: ${ADMIN_DB_PASSWORD}
      APP_IS_DEBUG: ${ADMIN_APP_IS_DEBUG}
      APP_PORT: ${ADMIN_APP_INNER_PORT}
      API_WALKER_HOST: backend_api_walker
      API_WALKER_PORT: ${API_WALKER_EXTERNAL_PORT}
    ports:
      - ${ADMIN_APP_EXTERNAL_PORT}:${ADMIN_APP_INNER_PORT}
    command: ${BACKEND_ADMIN_ENTRY_COMMAND}

  backend_admin_db:
    container_name: backend_admin_db
    build: backend/admin_db
    environment:
      POSTGRES_USER: ${ADMIN_DB_USER}
      POSTGRES_PASSWORD: ${ADMIN_DB_PASSWORD}
    volumes:
      - ./backend/admin_db/setup.sql:/docker-entrypoint-initdb.d/setup.sql
      - admin_data:/var/lib/postgresql/data
    ports:
      - ${ADMIN_DB_PORT}:${ADMIN_DB_PORT}

  backend_api_walker:
    container_name: backend_api_walker
    build:
      context: backend
      dockerfile: api_walker/Dockerfile
    ports:
      - ${API_WALKER_EXTERNAL_PORT}:${API_WALKER_INNER_PORT}
    command: ./build/api_walker

volumes:
  admin_data:

